Q1. Create a simple webpage using HTML &amp; CSS that includes a form with input fields for name, email, and message. Use CSS to style the form.
ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <title>Contact Form</title>
    <link rel="stylesheet" href="style.css">
<style>
body {
    font-family: sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #f4f4f4;
}
. .container {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 300px;
}
.container h2 {
    text-align: center;
    margin-bottom: 20px;
}
.form-group {
    margin-bottom: 15px;
}
.form-group label {
    display: block;
    margin-bottom: 5px;
}
.form-group input,
.form-group textarea {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
}
button {
    background-color: #4CAF50;
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    width: 100%;
}
button:hover {
    background-color: #45a049;
}
</style>
</head>
<body>
    <div class="container">
        <h2>Contact Us</h2>
        <form action="#" method="post">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="message">Message:</label>
                <textarea id="message" name="message" required></textarea>
            </div>
            <button type="submit">Submit</button>
        </form>
    </div>
</body>
</html>

Q2. Design HTML form to accept two strings and following three options (use radio button) and write a PHP script to perform the selected operations on String. a. Compare 2 strings b. Convert string into Uppercase c. Convert string into Lowercase.
ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <title>String Operations</title>
</head>
<body>
    <h2>String Operations</h2>
    <form action="process_strings.php" method="post">
        <label for="string1">String 1:</label>
        <input type="text" id="string1" name="string1" required><br><br>
        <label for="string2">String 2:</label>
        <input type="text" id="string2" name="string2" required><br><br>
        <input type="radio" id="compare" name="operation" value="compare" required>
        <label for="compare">Compare Strings</label><br>
        <input type="radio" id="uppercase" name="operation" value="uppercase">
        <label for="uppercase">Convert to Uppercase</label><br>
        <input type="radio" id="lowercase" name="operation" value="lowercase">
        <label for="lowercase">Convert to Lowercase</label><br><br>
        <button type="submit">Perform Operation</button>
    </form>
</body>
</html>

Q1) Write a HTML code, to create the following table
Bno Bname Price Rs. Paise.
101 DBMS 200 50
102 C-Prog 150 75
103 JAVA 300 00
104 PHP 250 50
105 ASP 100 00
ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <title>Book Table</title>
    <style>
        table {
            width: 50%;
            border-collapse: collapse;
            text-align: center;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
        }
        th {
            background-color: lightgray;
        }
    </style>
</head>
<body>
    <table>
        <tr>
            <th rowspan="2">Bno</th>
            <th rowspan="2">Bname</th>
            <th colspan="2">Price</th>
        </tr>
        <tr>
            <th>Rs.</th>
            <th>Paise.</th>
        </tr>
        <tr>
            <td>101</td>
            <td>DBMS</td>
            <td>200</td>
            <td>50</td>
        </tr>
        <tr>
            <td>102</td>
            <td>C-Prog</td>
            <td>150</td>
            <td>75</td>
        </tr>
        <tr>
            <td>103</td>
            <td>JAVA</td>
            <td>300</td>
            <td>00</td>
        </tr>
        <tr>
            <td>104</td>
            <td>PHP</td>
            <td>250</td>
            <td>50</td>
        </tr>
        <tr>
            <td>105</td>
            <td>ASP</td>
            <td>100</td>
            <td>00</td>
        </tr>
    </table>
</body>
</html>
Q2) Design HTML form to accept book details (bno, bname and price) from user. Write a PHP script to store input information in MySql book table.
ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <title>Book Entry Form</title>
</head>
<body>
    <h2>Enter Book Details</h2>
    <form action="insert.php" method="post">
        <label for="bno">Book Number:</label>
        <input type="number" id="bno" name="bno" required><br><br>
        <label for="bname">Book Name:</label>
        <input type="text" id="bname" name="bname" required><br><br>
        <label for="price">Price (Rs.Paise):</label>
        <input type="text" id="price" name="price" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

<?php
//insert.php//
$servername = "localhost"; 
$username = "root"; 
$password = ""; 
$dbname = "bookstore"; 
$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
$bno = $_POST['bno'];
$bname = $_POST['bname'];
$price = $_POST['price'];
$sql = "INSERT INTO book (bno, bname, price) VALUES ('$bno', '$bname', '$price')";
if ($conn->query($sql) === TRUE) {
    echo "New record added successfully!";
} else {
    echo "Error: " . $sql . "<br>" . $conn->error;
}
$conn->close();
?>
//book.sql
CREATE DATABASE bookstore;
USE bookstore;

CREATE TABLE book (
    bno INT PRIMARY KEY,
    bname VARCHAR(100),
    price VARCHAR(10)
);//

Q1) Design HTML form to accept a number and write a PHP script to calculate the factorial of a number using function.
ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <title>Factorial Calculator</title>
</head>
<body>
    <h2>Factorial Calculator</h2>
    <form action="factorial.php" method="post">
        <label for="number">Enter a Number:</label>
        <input type="number" id="number" name="number" required>
        <br><br>
        <input type="submit" value="Calculate Factorial">
    </form>
</body>
</html>
<?php //factorial.php//
function factorial($n) {
    if ($n < 0) {
        return "Factorial is not defined for negative numbers.";
    }
    if ($n == 0 || $n == 1) {
        return 1;
    }
    return $n * factorial($n - 1);
}
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $num = $_POST['number'];
    if (is_numeric($num) && $num >= 0) {
        $result = factorial($num);
        echo "<h2>Factorial of $num is: $result</h2>";
    } else {
        echo "<h2>Please enter a valid non-negative number.</h2>";
    }
}
?>

Q2) Develop a PHP script that extracts multiple values from an associative array and prints them in key-value format.
ANS:- <?php
// Define an associative array
$bookDetails = array(
    "Title" => "PHP for Beginners",
    "Author" => "John Doe",
    "Price" => 500,
    "Publisher" => "Tech Books",
    "Year" => 2023
);
// Extract and display values
echo "<h2>Book Details</h2>";
foreach ($bookDetails as $key => $value) {
    echo "<b>$key:</b> $value<br>";
}
?>

Q1) Create an html page with all the different text styles (bold, italic and underlined) and its combinations on separate lines. State style of each line in its text.
ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <title>Text Styles Example</title>
</head>
<body>
    <h2>Different Text Styles</h2>
    <p><b>This text is bold.</b></p>
    <p><i>This text is italic.</i></p>
    <p><u>This text is underlined.</u></p>
    <p><b><i>This text is bold and italic.</i></b></p>
    <p><b><u>This text is bold and underlined.</u></b></p>
    <p><i><u>This text is italic and underlined.</u></i></p>
    <p><b><i><u>This text is bold, italic, and underlined.</u></i></b></p>
</body>
</html>







Q2) Write a PHP script that sets a cookie for a username and retrieves its value on another page.
ANS:- PHP Script to Set Cookie (set_cookie.php)
<?php
$cookie_name = "username";
$cookie_value = "JohnDoe";
// Set cookie for 1 hour
setcookie($cookie_name, $cookie_value, time() + 3600, "/"); 
echo "Cookie named '$cookie_name' has been set with value '$cookie_value'.";
?>
<br>
<a href="get_cookie.php">Go to Retrieve Cookie Page</a>

PHP Script to Retrieve and Display Cookie (get_cookie.php)
<?php
if(isset($_COOKIE["username"])) {
    echo "Welcome, " . $_COOKIE["username"] . "!";
} else {
    echo "No cookie found!";
}
?>
<br>
<a href="set_cookie.php">Go to Set Cookie Page</a>

Q1) Write a PHP program to create and display a numeric array containing 5 values.
ANS:- <?php
// Creating a numeric array
$numbers = array(10, 20, 30, 40, 50);
// Displaying the array values
echo "<h2>Numeric Array Values:</h2>";
foreach ($numbers as $value) {
    echo $value . "<br>";
}
?>

Q2) Create table Login (username, password) in Mysql . Write HTML code to design a login form to accept username and password from user. If input username and password matches with the username and password in login table display message “Login Successful” otherwise display “Login Unsuccessful”.
Step 1: Create login Table in MySQL 
Run this SQL query in MySQL to create the login table:
CREATE DATABASE user_db;
USE user_db;

CREATE TABLE login (
    username VARCHAR(50) PRIMARY KEY,
    password VARCHAR(255) NOT NULL
);

-- Insert a sample user (password is stored as plain text, but should be hashed in real applications)
INSERT INTO login (username, password) VALUES ('admin', 'admin123');

Step 2: HTML Login Form (login.html)
This form collects the username and password from the user.
html
CopyEdit
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Form</title>
</head>
<body>

    <h2>Login</h2>
    <form action="authenticate.php" method="post">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <input type="submit" value="Login">
    </form>

</body>
</html>

Step 3: PHP Script for Authentication (authenticate.php)                                                     This script checks the username and password against the database.
<?php
$servername = "localhost";
$username = "root"; 
$password = ""; 
$dbname = "user_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get input values
$user = $_POST['username'];
$pass = $_POST['password'];

// Prepare and execute SQL query
$sql = "SELECT * FROM login WHERE username='$user' AND password='$pass'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    echo "<h2>Login Successful</h2>";
} else {
    echo "<h2>Login Unsuccessful</h2>";
}

$conn->close();
?>


Q1) Write a PHP script to count the number of elements in an array and display the maximum and minimum values.

ANS:- <?php
// Define an array
$numbers = array(10, 25, 5, 100, 50, 75);
// Count elements
$count = count($numbers);
// Find max and min values
$maxValue = max($numbers);
$minValue = min($numbers);
// Display results
echo "<h2>Array Information</h2>";
echo "Array Elements: " . implode(", ", $numbers) . "<br>";
echo "Total Elements: $count<br>";
echo "Maximum Value: $maxValue<br>";
echo "Minimum Value: $minValue<br>";
?>

Q2) Create an HTML form with a text input field and a submit button. Write a PHP script to capture the user input and display it using the GET method.

ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <title>User Input Form</title>
</head>
<body>
    <h2>Enter Your Name</h2>
    <form action="display_input.php" method="get">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
        <br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

Step 2: PHP Script to Display Input (display_input.php)
<?php
if(isset($_GET["name"])) {
    $name = htmlspecialchars($_GET["name"]); // Sanitize input
    echo "<h2>Your Entered Name:</h2>";
    echo "<p>$name</p>";
} else {
    echo "<h2>No input received.</h2>";
}
?>

















Q1) Develop a form with radio buttons for gender selection. Use PHP to display the selected option.

ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gender Selection</title>
</head>
<body>
    <h2>Select Your Gender</h2>
    <form action="display_gender.php" method="post">
        <input type="radio" id="male" name="gender" value="Male" required>
        <label for="male">Male</label><br>
        <input type="radio" id="female" name="gender" value="Female">
        <label for="female">Female</label><br>
        <input type="radio" id="other" name="gender" value="Other">
        <label for="other">Other</label><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

Step 2: PHP Script to Display Selected Gender (display_gender.php)
<?php
if(isset($_POST["gender"])) {
    $selected_gender = htmlspecialchars($_POST["gender"]); // Sanitize input
    echo "<h2>You Selected: $selected_gender</h2>";
} else {
    echo "<h2>No gender selected.</h2>";
}
?>

Q2) Create class dept with data members dno and dname. Derive class emp from dept with data members ename, salary and member functions to initialize object and to print the employee details.
ANS:-
<?php
// Parent class: Department
class Dept {
    protected $dno;
    protected $dname;
    // Constructor for Dept class
    public function __construct($dno, $dname) {
        $this->dno = $dno;
        $this->dname = $dname;
    }
}
// Child class: Employee
class Emp extends Dept {
    private $ename;
    private $salary;
    // Constructor for Emp class
    public function __construct($dno, $dname, $ename, $salary) {
        parent::__construct($dno, $dname);
        $this->ename = $ename;
        $this->salary = $salary;
    }
    // Function to display employee details
    public function displayDetails() {
        echo "<h2>Employee Details</h2>";
        echo "Department Number: $this->dno<br>";
        echo "Department Name: $this->dname<br>";
        echo "Employee Name: $this->ename<br>";
        echo "Salary: $this->salary<br>";
    }
}

// Creating an Employee Object
$employee = new Emp(101, "IT", "John Doe", 50000);
$employee->displayDetails();
?>

Q1) Design a HTML form to accept a number and write a PHP script to display each digit of a number in words.
ANS:-
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Number to Words</title>
</head>
<body>

    <h2>Enter a Number</h2>
    <form action="number_to_words.php" method="post">
        <label for="number">Number:</label>
        <input type="text" id="number" name="number" required pattern="\d+">
        <br><br>
        <input type="submit" value="Convert">
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $num = $_POST['number'];
    // Array to map digits to words
    $words = array(
        '0' => 'Zero', '1' => 'One', '2' => 'Two', '3' => 'Three', '4' => 'Four',
        '5' => 'Five', '6' => 'Six', '7' => 'Seven', '8' => 'Eight', '9' => 'Nine'
    );
    // Convert each digit to word
    $numArray = str_split($num);
    $numInWords = array_map(fn($digit) => $words[$digit], $numArray);
    echo "<h2>Number in Words:</h2>";
    echo implode(" ", $numInWords);
}
?>
Q2) Create class Fruit with data member’s name, color. Derive class Apple from Fruit with data members price and member functions to initialize object and to print the Fruit details.
ANS:-
<?php
// Parent class: Fruit
class Fruit {
    protected $name;
    protected $color;
    // Constructor for Fruit class
    public function __construct($name, $color) {
        $this->name = $name;
        $this->color = $color;
    }
}
// Child class: Apple
class Apple extends Fruit {
    private $price;
    // Constructor for Apple class
    public function __construct($name, $color, $price) {
        parent::__construct($name, $color);
        $this->price = $price;
    }
    // Function to display fruit details
    public function displayDetails() {
        echo "<h2>Fruit Details</h2>";
        echo "Fruit Name: $this->name<br>";
        echo "Color: $this->color<br>";
        echo "Price: $this->price<br>";
    }
}

// Creating an Apple Object
$apple = new Apple("Apple", "Red", 100);
$apple->displayDetails();
?>

Q1) Design HTML form to accept user name and write a PHP script to display user name as
heading on web page.
ANS:-
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Username Display</title>
</head>
<body>
    <h2>Enter Your Name</h2>
    <form action="display_username.php" method="post">
        <input type="text" name="username" placeholder="Enter your name" required>
        <br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']); // Prevent XSS attacks
    echo "<h1>Welcome $username</h1>";
}
?>


Q2) Create a class shape with two data members x,y and two methods getx() and gety(). Derive two classes square and circle from shape to calculate area of square and circle.
ANS:- 
<?php
// Parent class: Shape
class Shape {
    protected $x;
    protected $y;
    public function __construct($x, $y) {
        $this->x = $x;
        $this->y = $y;
    }
    public function getX() {
        return $this->x;
    }
    public function getY() {
        return $this->y;
    }
}
// Derived class: Square
class Square extends Shape {
    public function getArea() {
        return $this->x * $this->y;
    }
}
// Derived class: Circle
class Circle extends Shape {
    public function getArea() {
        return pi() * pow($this->x, 2);
    }
}
// Example usage
$square = new Square(4, 4);
$circle = new Circle(5, 5);
echo "Area of Square: " . $square->getArea() . "<br>";
echo "Area of Circle: " . $circle->getArea();
?>

Q1) Write a PHP script to count the number of elements in an array and display the
maximum and minimum values.
ANS:-
<?php
// Define a numeric array
$numbers = array(10, 45, 7, 88, 23);
// Count the number of elements
$count = count($numbers);
// Find the maximum and minimum values
$maxValue = max($numbers);
$minValue = min($numbers);
// Display results
echo "Total number of elements: $count <br>";
echo "Maximum value: $maxValue <br>";
echo "Minimum value: $minValue <br>";
?>

Q2) Write a PHP script that uses a foreach loop to iterate over an associative array and print key-value pairs.
ANS:-
<?php
// Define an associative array
$studentMarks = array(
    "Alice" => 85,
    "Bob" => 78,
    "Charlie" => 92,
    "David" => 66
);
// Iterate using foreach loop and print key-value pairs
foreach ($studentMarks as $name => $marks) {
    echo "Student: $name - Marks: $marks <br>";
}
?>

Q1) Design HTML form to accept a number from user and write a PHP Script to display
sum of all digits of a input number.
ANS:- <!DOCTYPE html>
<html lang="en">
<head>
    <title>Sum of Digits</title>
</head>
<body>
    <h2>Enter a Number</h2>
    <form action="calculate_sum.php" method="post">
        <input type="number" name="number" placeholder="Enter a number" required>
        <br><br>
        <input type="submit" value="Calculate Sum">
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $number = $_POST['number'];
    $sum = 0;
    // Loop to extract each digit and add to sum
    while ($number != 0) {
        $sum += $number % 10;
        $number = floor($number / 10);
    }
    echo "<h2>Sum of Digits: $sum</h2>";
}
?>

Q2) Write a PHP Script to create a class vegetable that contains data members as Name,
Color and Price. Write a member function to accept and display details of Vegetable ANS:- <?php
class Vegetable {
    private $name;
    private $color;
    private $price;
    // Constructor to initialize properties
    public function __construct($name, $color, $price) {
        $this->name = $name;
        $this->color = $color;
        $this->price = $price;
    }
    // Method to display vegetable details
    public function displayDetails() {
        echo "Vegetable Name: " . $this->name . "<br>";
        echo "Color: " . $this->color . "<br>";
        echo "Price: $" . $this->price . "<br>";
    }
}
// Creating an instance of Vegetable class
$veggie = new Vegetable("Carrot", "Orange", 50);
$veggie->displayDetails();
?>

Q1) Write a PHP script to count the number of times a web page has accessed.
ANS:-
Method 1: Using Sessions (counter_session.php)
<?php
session_start();

if (!isset($_SESSION['page_count'])) {
    $_SESSION['page_count'] = 1;
} else {
    $_SESSION['page_count']++;
}
echo "<h2>Page Views: " . $_SESSION['page_count'] . "</h2>";
?>
Method 2: Using a File (counter_file.php)
<?php
$filename = "counter.txt";

if (!file_exists($filename)) {
    file_put_contents($filename, 0);
}
$counter = (int) file_get_contents($filename);
$counter++;
file_put_contents($filename, $counter);

echo "<h2>Page Views: $counter</h2>";
?>








Q2) Write a PHP script to display all records of MySql emp table on webpage in tabular format.
ANS:-
Step 1: Create the MySQL emp Table
Run the following SQL query in phpMyAdmin or MySQL command line:
CREATE DATABASE company;
USE company;

CREATE TABLE emp (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50),
    department VARCHAR(50),
    salary DECIMAL(10,2)
);
INSERT INTO emp (name, department, salary) VALUES 
('John Doe', 'IT', 60000),
('Alice Smith', 'HR', 55000),
('Robert Brown', 'Finance', 70000);
Step 2: PHP Script to Fetch and Display Records (display_emp.php)
<?php
$servername = "localhost";
$username = "root";  // Default username for XAMPP
$password = "";      // Default password for XAMPP
$database = "company";
// Create connection
$conn = new mysqli($servername, $username, $password, $database);
// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
// Fetch records
$sql = "SELECT * FROM emp";
$result = $conn->query($sql);
echo "<h2>Employee Records</h2>";
if ($result->num_rows > 0) {
    echo "<table border='1' cellpadding='5' cellspacing='0'>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Department</th>
                <th>Salary</th>
            </tr>";
    while ($row = $result->fetch_assoc()) {
        echo "<tr>
                <td>{$row['id']}</td>
                <td>{$row['name']}</td>
                <td>{$row['department']}</td>
                <td>{$row['salary']}</td>
              </tr>";
    }
    echo "</table>";
} else {
    echo "No records found!";
}
// Close connection
$conn->close();
?>










Q1) Write a PHP Script to create a class vegetable that contains data members as Name,
Color and Price. Write a member function to accept and display details of Vegetable.
ANS:-
<?php
class Vegetable {
    public $name;
    public $color;
    public $price;
    // Method to accept details
    public function setDetails($name, $color, $price) {
        $this->name = $name;
        $this->color = $color;
        $this->price = $price;
    }
    // Method to display details
    public function displayDetails() {
        echo "<h3>Vegetable Details</h3>";
        echo "Name: " . $this->name . "<br>";
        echo "Color: " . $this->color . "<br>";
        echo "Price: ?" . $this->price . "<br>";
    }
}
// Creating an object and setting details
$veg1 = new Vegetable();
$veg1->setDetails("Carrot", "Orange", 50);
$veg1->displayDetails();
?>

Q2) Create an online Railway registration form. On the first page accept name, address,
birthdate, and mobile number. On the second page accept Train details (Train_name, source, destination, departure date-time and charges). If the user does not enter information within a specified time limit, expire his session and give a warning otherwise display details using sessions on the third page.
ANS:-
Step 1: Start a Session & Create the First Page (page1.php)
<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Railway Registration - Step 1</title>
</head>
<body>
    <h2>Passenger Details</h2>
    <form action="page2.php" method="post">
        Name: <input type="text" name="name" required><br><br>
        Address: <textarea name="address" required></textarea><br><br>
        Birthdate: <input type="date" name="birthdate" required><br><br>
        Mobile Number: <input type="text" name="mobile" required><br><br>
        <input type="submit" value="Next">
    </form>
</body>
</html>

Step 2: Save Passenger Data & Create the Second Page (page2.php)
<?php
session_start();
// Store passenger details
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $_SESSION['name'] = $_POST['name'];
    $_SESSION['address'] = $_POST['address'];
    $_SESSION['birthdate'] = $_POST['birthdate'];
    $_SESSION['mobile'] = $_POST['mobile'];
    
    // Set session expiration (5 minutes)
    $_SESSION['expire_time'] = time() + 300;
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Railway Registration - Step 2</title>
</head>
<body>
    <h2>Train Details</h2>
    <form action="page3.php" method="post">
        Train Name: <input type="text" name="train_name" required><br><br>
        Source: <input type="text" name="source" required><br><br>
        Destination: <input type="text" name="destination" required><br><br>
        Departure Date & Time: <input type="datetime-local" name="departure" required><br><br>
        Charges: <input type="number" name="charges" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>
Step 3: Validate Session & Display Final Ticket (page3.php)
<?php
session_start();
// Check if session has expired
if (!isset($_SESSION['expire_time']) || time() > $_SESSION['expire_time']) {
    session_destroy();
    die("<h2>Session Expired. Please restart the registration.</h2>");
}
// Store train details
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $_SESSION['train_name'] = $_POST['train_name'];
    $_SESSION['source'] = $_POST['source'];
    $_SESSION['destination'] = $_POST['destination'];
    $_SESSION['departure'] = $_POST['departure'];
    $_SESSION['charges'] = $_POST['charges'];
}
// Display user and train details
echo "<h2>Final Ticket Details</h2>";
echo "<strong>Passenger Information:</strong><br>";
echo "Name: " . $_SESSION['name'] . "<br>";
echo "Address: " . $_SESSION['address'] . "<br>";
echo "Birthdate: " . $_SESSION['birthdate'] . "<br>";
echo "Mobile: " . $_SESSION['mobile'] . "<br><br>";
echo "<strong>Train Details:</strong><br>";
echo "Train Name: " . $_SESSION['train_name'] . "<br>";
echo "Source: " . $_SESSION['source'] . "<br>";
echo "Destination: " . $_SESSION['destination'] . "<br>";
echo "Departure: " . $_SESSION['departure'] . "<br>";
echo "Charges: ?" . $_SESSION['charges'] . "<br>";
?>













Q1) Write a script in PHP to merge two different arrays.
ANS:- <?php
// Define two different arrays
$array1 = array("Apple", "Banana", "Cherry");
$array2 = array("Mango", "Orange", "Grapes");
// Merge the arrays
$mergedArray = array_merge($array1, $array2);
// Display the merged array
echo "<h3>Merged Array:</h3>";
echo "<pre>";
print_r($mergedArray);
echo "</pre>";
?>

Q2) Create a login form with a username and password. Once the user logs in, the second form should be displayed to accept user details (name, city, phone no). If the user doesn’t enter information within a specified time limit, expire his session and give a warning.
ANS:-
Step 1: Create Login Form (login.php)
<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>User Login</h2>
    <form action="user_details.php" method="post">
        Username: <input type="text" name="username" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>

Step 2: Validate Login & Accept User Details (user_details.php)
php
CopyEdit
<?php
session_start();
// Check if login form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $_SESSION['username'] = $_POST['username'];
    $_SESSION['password'] = $_POST['password'];
    // Set session expiration time (5 minutes)
    $_SESSION['expire_time'] = time() + 300;
}
// Check if session is active
if (!isset($_SESSION['username']) || time() > $_SESSION['expire_time']) {
    session_destroy();
    die("<h2>Session Expired. Please log in again.</h2>");
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>User Details</title>
</head>
<body>
    <h2>Enter Your Details</h2>
    <form action="welcome.php" method="post">
        Name: <input type="text" name="name" required><br><br>
        City: <input type="text" name="city" required><br><br>
        Phone Number: <input type="text" name="phone" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

Step 3: Display User Information (welcome.php)
<?php
session_start();

// Check if session is active
if (!isset($_SESSION['expire_time']) || time() > $_SESSION['expire_time']) {
    session_destroy();
    die("<h2>Session Expired. Please restart the process.</h2>");
}
// Store user details
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $_SESSION['name'] = $_POST['name'];
    $_SESSION['city'] = $_POST['city'];
    $_SESSION['phone'] = $_POST['phone'];
}
// Display user details
echo "<h2>Welcome, " . $_SESSION['username'] . "!</h2>";
echo "<strong>Your Details:</strong><br>";
echo "Name: " . $_SESSION['name'] . "<br>";
echo "City: " . $_SESSION['city'] . "<br>";
echo "Phone: " . $_SESSION['phone'] . "<br>";
?>


Q1) Write a php script to insert record in Mysql table.
ANS:-
Step 1: Create a MySQL Database and Table
Run the following SQL query in phpMyAdmin or MySQL terminal:

CREATE DATABASE my_database;
USE my_database;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(100),
    age INT
);
Step 2: PHP Script to Insert Data (insert_record.php)
<?php
// Database connection
$servername = "localhost";
$username = "root"; // Default for XAMPP
$password = ""; // Leave empty for XAMPP
$dbname = "my_database"; // Your database name
// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);
// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $age = $_POST['age'];

    // Insert query
    $sql = "INSERT INTO users (name, email, age) VALUES ('$name', '$email', '$age')";

    if ($conn->query($sql) === TRUE) {
        echo "<h3>Record inserted successfully!</h3>";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

// Close connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Insert Record</title>
</head>
<body>
    <h2>Enter User Details</h2>
    <form method="post" action="">
        Name: <input type="text" name="name" required><br><br>
        Email: <input type="email" name="email" required><br><br>
        Age: <input type="number" name="age" required><br><br>
        <input type="submit" value="Insert">
    </form>
</body>
</html>


Q2) Write a PHP script that inserts a new item in an array in any position.
ANS:-

<?php
function insertItemAtPosition($array, $item, $position) {
    array_splice($array, $position, 0, $item);
    return $array;
}
// Original array
$fruits = ["Apple", "Banana", "Cherry", "Mango"];
// Insert "Orange" at position 2
$fruits = insertItemAtPosition($fruits, "Orange", 2);
// Display updated array
echo "<h3>Updated Array:</h3>";
echo "<pre>";
print_r($fruits);
echo "</pre>";
?>
Q1) Write PHP script to delete specific employee record form emp table.
ANS:- 
Step 1: Create emp Table in MySQL 
Run this SQL command to create the emp table in your MySQL database:
CREATE DATABASE company;
USE company;

CREATE TABLE emp (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    designation VARCHAR(100),
    salary INT
);
-- Insert sample records
INSERT INTO emp (name, designation, salary) VALUES 
('John Doe', 'Manager', 50000),
('Jane Smith', 'Developer', 40000),
('Alice Johnson', 'Designer', 35000);


Step 2: PHP Script to Delete Employee Record (delete_emp.php)
<?php
// Database connection
$servername = "localhost";
$username = "root"; // Default for XAMPP
$password = ""; // Leave empty for XAMPP
$dbname = "company";
$conn = new mysqli($servername, $username, $password, $dbname);
// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $emp_id = $_POST['emp_id'];
    // SQL delete query
    $sql = "DELETE FROM emp WHERE id = '$emp_id'";
    if ($conn->query($sql) === TRUE) {
        echo "<h3>Employee record deleted successfully!</h3>";
    } else {
        echo "Error deleting record: " . $conn->error;
    }
}
// Fetch all employees to display in the dropdown
$result = $conn->query("SELECT * FROM emp");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Delete Employee</title>
</head>
<body>
    <h2>Delete Employee Record</h2>
    <form method="post" action="">
        <label>Select Employee:</label>
        <select name="emp_id">
            <?php while ($row = $result->fetch_assoc()) { ?>
                <option value="<?= $row['id'] ?>"><?= $row['name'] ?> (<?= $row['designation'] ?>)</option>
            <?php } ?>
        </select>
        <br><br>
        <input type="submit" value="Delete">
    </form>
</body>
</html>

<?php $conn->close(); ?>


Q2) Create an HTML form with a text input field and a submit button. Write a PHP script to capture the user input and display it using the GET method.
ANS:-
Step 1: Create an HTML Form (get_form.php)
<!DOCTYPE html>
<html>
<head>
    <title>GET Method Form</title>
</head>
<body>
    <h2>Enter Your Name</h2>
    <form action="display_get.php" method="get">
        Name: <input type="text" name="username" required>
        <br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

Step 2: PHP Script to Capture & Display Input (display_get.php)
<?php
if (isset($_GET['username'])) {
    $name = $_GET['username'];
    echo "<h2>Welcome, $name!</h2>";
} else {
    echo "<h2>No input received.</h2>";
}
?>

Q1) PHP program to find the maximum and minimum element of an array.
ANS:- <?php
// Define an array
$numbers = array(10, 25, 98, 45, 5, 78, 65);
// Find the maximum and minimum values
$max_value = max($numbers);
$min_value = min($numbers);
// Display the results
echo "<h3>Array Elements: " . implode(", ", $numbers) . "</h3>";
echo "<h3>Maximum Value: $max_value</h3>";
echo "<h3>Minimum Value: $min_value</h3>";
?>

Q2) Design following form in HTML and write a PHP script to display filled information on web page.
ANS:-
Step 1: Create the HTML Form (form.php)
php
CopyEdit
<!DOCTYPE html>
<html>
<head>
    <title>User Information Form</title>
</head>
<body>
    <h2>Fill the Form</h2>
    <form action="display_info.php" method="post">
        Enter your name: <input type="text" name="name" required><br><br>
        Select your City:
        <select name="city">
            <option value="Pune">Pune</option>
            <option value="Mumbai">Mumbai</option>
            <option value="Delhi">Delhi</option>
        </select>
        <br><br>
        <b>Which Operating System do you have used?</b><br>
        <input type="checkbox" name="os[]" value="Windows"> Windows
        <input type="checkbox" name="os[]" value="Linux"> Linux
        <input type="checkbox" name="os[]" value="Mac"> Mac
        <br><br>
        <b>Gender:</b><br>
        <input type="radio" name="gender" value="Male"> Male
        <input type="radio" name="gender" value="Female"> Female
        <br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

Step 2: PHP Script to Display User Input (display_info.php)
<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $city = $_POST['city'];
    $gender = isset($_POST['gender']) ? $_POST['gender'] : "Not Selected";
    $os = isset($_POST['os']) ? implode(", ", $_POST['os']) : "None Selected";

    echo "<h2>User Information</h2>";
    echo "<b>Name:</b> $name <br>";
    echo "<b>City:</b> $city <br>";
    echo "<b>Operating Systems Used:</b> $os <br>";
    echo "<b>Gender:</b> $gender <br>";
} else {
    echo "<h3>No data received.</h3>";
}
?>

Q1) Write a PHP script to get only values from associative array.
ANS:-
<?php
// Define an associative array
$employee = array(
    "ID" => 101,
    "Name" => "John Doe",
    "Department" => "IT",
    "Salary" => 50000
);

// Extract only values
$values = array_values($employee);

// Display values
echo "<h3>Values from Associative Array:</h3>";
foreach ($values as $value) {
    echo "$value <br>";
}
?>




Q2) Design HTML form to accept eno, ename and salary from user. Write a PHP script to store input information in MySql emp table.
ANS:-
Step 1: Create MySQL Table (create_emp_table.sql)

CREATE DATABASE company;
USE company;

CREATE TABLE emp (
    eno INT PRIMARY KEY,
    ename VARCHAR(50),
    salary DECIMAL(10,2)
);

Step 2: HTML Form (employee_form.php)
<!DOCTYPE html>
<html>
<head>
    <title>Employee Registration</title>
</head>
<body>
    <h2>Enter Employee Details</h2>
    <form action="insert_employee.php" method="post">
        Employee No: <input type="number" name="eno" required><br><br>
        Employee Name: <input type="text" name="ename" required><br><br>
        Salary: <input type="number" step="0.01" name="salary" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

Step 3: PHP Script to Store Data in MySQL (insert_employee.php)
<?php
// Database connection
$conn = new mysqli("localhost", "root", "", "company");
// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
// Get form data
$eno = $_POST['eno'];
$ename = $_POST['ename'];
$salary = $_POST['salary'];
// Insert data into MySQL table
$sql = "INSERT INTO emp (eno, ename, salary) VALUES ('$eno', '$ename', '$salary')";
if ($conn->query($sql) === TRUE) {
    echo "<h3>Employee record inserted successfully!</h3>";
} else {
    echo "<h3>Error: " . $conn->error . "</h3>";
}
// Close connection
$conn->close();
?>




Q1) Write a PHP scrip to sort an integer array in ascending and descending order.
ANS:-
<?php
// Define an integer array
$numbers = array(45, 12, 78, 34, 89, 23, 56);
// Sort in ascending order
$ascending = $numbers;
sort($ascending);
// Sort in descending order
$descending = $numbers;
rsort($descending);
// Display results
echo "<h3>Original Array:</h3>";
echo implode(", ", $numbers);
echo "<h3>Ascending Order:</h3>";
echo implode(", ", $ascending);
echo "<h3>Descending Order:</h3>";
echo implode(", ", $descending);
?>

Q2) Write a PHP script to accept employee details (name, address) and earning details
(basic, DA, HRA). Display employee details and earning details in the proper format.
ANS:-
Step 1: Create HTML Form (employee_earnings.php)
<!DOCTYPE html>
<html>
<head>
    <title>Employee Details Form</title>
</head>
<body>
    <h2>Enter Employee Details</h2>
    <form action="display_employee.php" method="post">
        Name: <input type="text" name="name" required><br><br>
        Address: <input type="text" name="address" required><br><br>
        Basic Salary: <input type="number" step="0.01" name="basic" required><br><br>
        DA: <input type="number" step="0.01" name="da" required><br><br>
        HRA: <input type="number" step="0.01" name="hra" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>
Step 2: PHP Script to Display Employee Details (display_employee.php)
<?php
// Get form data
$name = $_POST['name'];
$address = $_POST['address'];
$basic = $_POST['basic'];
$da = $_POST['da'];
$hra = $_POST['hra'];
// Calculate total earnings
$total = $basic + $da + $hra;
// Display Employee Details
echo "<h2>Employee Details</h2>";
echo "Name: $name <br>";
echo "Address: $address <br>";
echo "<h2>Earning Details</h2>";
echo "Basic Salary: ?$basic <br>";
echo "DA: ?$da <br>";
echo "HRA: ?$hra <br>";
echo "<b>Total Earnings: ?$total</b>";
?>

Q1) Write a PHP script to find the occurrences of a given element in an array.
ANS:-
<?php
// Define an array
$numbers = array(1, 2, 3, 4, 2, 5, 2, 6, 7, 2, 8);
// Element to search for
$searchElement = 2;
// Count occurrences
$occurrences = array_count_values($numbers);
$count = isset($occurrences[$searchElement]) ? $occurrences[$searchElement] : 0;
// Display result
echo "The number $searchElement appears $count times in the array.";
?>

Q2) Create an HTML form with a checkbox group for selecting multiple hobbies. Write a PHP script to display the selected values.
ANS:-
Step 1: Create HTML Form (hobbies_form.php)
<!DOCTYPE html>
<html>
<head>
    <title>Select Hobbies</title>
</head>
<body>
    <h2>Select Your Hobbies</h2>
    <form action="display_hobbies.php" method="post">
        <input type="checkbox" name="hobbies[]" value="Reading"> Reading<br>
        <input type="checkbox" name="hobbies[]" value="Traveling"> Traveling<br>
        <input type="checkbox" name="hobbies[]" value="Cooking"> Cooking<br>
        <input type="checkbox" name="hobbies[]" value="Gaming"> Gaming<br>
        <input type="checkbox" name="hobbies[]" value="Music"> Music<br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

Step 2: PHP Script to Display Selected Hobbies (display_hobbies.php)
<?php
// Check if hobbies are selected
if(isset($_POST['hobbies'])) {
    $hobbies = $_POST['hobbies'];
    echo "<h2>Your Selected Hobbies:</h2>";
    echo "<ul>";
    foreach($hobbies as $hobby) {
        echo "<li>$hobby</li>";
    }
    echo "</ul>";
} else {
    echo "<h2>No hobbies selected.</h2>";
}
?>









